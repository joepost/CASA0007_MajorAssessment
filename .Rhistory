# Install Packages
Hideinstall.packages(c("sf", "tmap", "tmaptools", "RSQLite", "tidyverse"),
repos = "https://www.stats.bris.ac.uk/R/")
# Install Packages
install.packages(c("sf", "tmap", "tmaptools", "RSQLite", "tidyverse"),
repos = "https://www.stats.bris.ac.uk/R/")
load(sf)
library(sf)
shape <- st_read("N:/Documents/CASA0005/GIS/wk1/statistical-gis-boundaries-london/ESRI/London_Borough_Excluding_MHW.shp")
summary(shape)
plot(shape)
# Plot geometry
shape %>%
st_geometry() %>%
plot()
library(tidyverse)
# Load in .csv data
flytipping <- read_csv("N:/Documents/CASA0005/GIS/wk1/fly_tipping_borough_wide.csv")
flytipping
flytipping %>%
rename(GSS_CODE = `Row Labels`)
# Join the .csv data to the shapefile
shapejn <- left_join(flytipping, by = 'GSS_CODE')
# Join the .csv data to the shapefile
shapejn <- shape %>%
left_join(flytipping, by = 'GSS_CODE')
flytipping <- flytipping %>%
rename(GSS_CODE = `Row Labels`)
# Join the .csv data to the shapefile
shapejn <- shape %>%
left_join(flytipping, by = 'GSS_CODE')
#Check if the join was successful
head(shapejn, 10)
library(tmap)
shapejn %>%
qtm(., fill = '2011-12')
# Create thematic map of data using tmap package
tmap_mode(plot)
shapejn %>%
qtm(., fill = '2011-12')
# Create thematic map of data using tmap package
tmap_mode("plot")
shapejn %>%
qtm(., fill = '2011-12')
# Export shape to a geopackage
shapejn %>%
st_write(.,"N:/Documents/CASA0005/GIS/wk1/R_wk1.gpkg",
"london_boroughs_fly_tipping",
delete_layer=TRUE)
library(readr)
library(RSQLite)
# Connect to geopackage database
con <- dbConnect(RSQLite::SQLite(),"N:/Documents/CASA0005/GIS/wk1/R_wk1.gpkg")
# Examine database
con %>%
dbListTables()
# Add flytipping table to gpkg
con %>%
dbWriteTable(.,"fly_tipping_borough_wide.csv", flytipping, overwrite = TRUE)
# Disconnect from database
con %>%
dbDisconnect()
# CASA0005 GIS: Week 1 Practical
# Date created: 05-10-2022
# Author: J Post
# Install packages and load from library
install.packages(c("sf", "tmap", "tmaptools", "RSQLite", "tidyverse"),
repos = "https://www.stats.bris.ac.uk/R/")
library(sf)
library(tidyverse)
library(tmap)
library(readr)
library(RSQLite)
# Load in shapefile
shape <- st_read("N:/Documents/CASA0005/GIS/wk1/statistical-gis-boundaries-london/ESRI/London_Borough_Excluding_MHW.shp")
summary(shape)
# Quick plot all attributes
plot(shape)
# Plot geometry
shape %>%
st_geometry() %>%
plot()
# Load in .csv data
flytipping <- read_csv("N:/Documents/CASA0005/GIS/wk1/fly_tipping_borough_wide.csv")
flytipping <- flytipping %>%
rename(GSS_CODE = `Row Labels`)
# Join the .csv data to the shapefile
shapejn <- shape %>%
left_join(flytipping, by = 'GSS_CODE')
#Check if the join was successful
head(shapejn, 10)
# Create thematic map of data using tmap package
tmap_mode("plot")
shapejn %>%
qtm(., fill = '2011-12')
# Load in shapefile
shape <- st_read("N:/Documents/CASA0005/GIS/wk1/Homework/territorial-authority-2018-generalised.shp")
summary(shape)
plot(shape)
# Load in census data
censusdata <- read_csv("N:/Documents/CASA0005/GIS/wk1/Homework/paid_employee_2018census_by_territorial_authority.csv")
?plot
# Load in shapefile
shapenz <- st_read("N:/Documents/CASA0005/GIS/wk1/Homework/territorial-authority-2018-generalised.shp")
head(censusdata)
head(shapenz)
# Join census data to the NZ shapefile
# Census 'Area_code' joins to shapefile 'TA2018_V1_'
shapenz <- left_join(censusdata, by = c('_TA2018_V1_' = 'Area_code'))
/left_join
>,
()
(con)
summary(shape)
?left_join
names(censusdata)
# Join census data to the NZ shapefile
# Census 'Area_Code' joins to shapefile 'TA2018_V1_'
shapenz <- left_join(censusdata, by = c('_TA2018_V1_' = 'Area_Code'))
# Join census data to the NZ shapefile
# Census 'Area_Code' joins to shapefile 'TA2018_V1_'
shapenz <- left_join(., censusdata, by = c('_TA2018_V1_' = 'Area_Code'))
# Join census data to the NZ shapefile
# Census 'Area_Code' joins to shapefile 'TA2018_V1_'
shapenz <- shapenz %>% left_join(censusdata, by = c('_TA2018_V1_' = 'Area_Code'))
names(shapenz)
# Join census data to the NZ shapefile
# Census 'Area_Code' joins to shapefile 'TA2018_V1_'
shapenz <- shapenz %>% left_join(censusdata, by = c('TA2018_V1_' = 'Area_Code'))
?tmap_mode
?qtm
# Create thematic map of joined data
tmap_mode("plot")
shapenz %>%
qtm(., fill = 'Paid employee')
?tm_fill
# Re-plot using expanded tmap functions to control classification breaks
mapnz <- tm_shape(shapenz) +
tm_fill('TA2018_V1_', style = 'jenks', n=8)
mapnz
# Re-plot using expanded tmap functions to control classification breaks
mapnz <- tm_shape(shapenz) +
tm_fill(col = 'TA2018_V1_', style = 'jenks', n=8)
mapnz
tmaptools::palette_explorer()
install.packages("shiny")
tmaptools::palette_explorer()
install.packages("shinyjs")
tmaptools::palette_explorer()
# Re-plot using expanded tmap functions to control classification breaks
mapnz <- tm_shape(shapenz) +
tm_fill(col = 'TA2018_V1_', n=8, style = 'jenks', palette = 'Blues')
mapnz
# Re-plot using expanded tmap functions to control classification breaks
mapnz <- tm_shape(shapenz) +
tm_fill(col = 'Paid employee', n=8, style = 'jenks', palette = 'Blues')
mapnz
# Re-plot using expanded tmap functions to control classification breaks
mapnz <- tm_shape(shapenz) +
tm_fill(col = 'Paid employee', n=8, style = 'jenks', palette = 'Blues') +
tm_borders(alpha = 1)
mapnz
# Calculate new variable: proportion of paid employees by total working population
censusdata <- censusdata %>% mutate('Propn_Paid employee' = 'Paid employee'/'Total')
rlang::last_error()
# Calculate new variable: proportion of paid employees by total working population
censusdata <- censusdata %>% mutate(propn_paid = 'Paid employee'/'Total')
# Calculate new variable: proportion of paid employees by total working population
censusdata <- censusdata %>% mutate(propn_paid = 'Paid employee'+2)
str(censusdata)
class(censusdata$`Paid employee`)
# Calculate new variable: proportion of paid employees by total working population
censusdata <- censusdata %>% mutate(propn_paid = `Paid employee`/Total)
# Join census data to the NZ shapefile
# Census 'Area_Code' joins to shapefile 'TA2018_V1_'
shapenz <- shapenz %>% left_join(censusdata, by = c('TA2018_V1_' = 'Area_Code'))
mapnz_propn <- tm_shape(shapenz) +
tm_fill(col = 'propn_paid', n=8, style = 'jenks', palette = 'Blues') +
tm_borders(alpha = 1)
mapnz_propn
mapnz_propn <- tm_shape(shapenz) +
tm_fill(col = 'propn_paid', n=8, style = 'pretty', palette = 'Blues') +
tm_borders(alpha = 1)
mapnz_propn
mapnz_propn <- tm_shape(shapenz) +
tm_fill(col = 'propn_paid', n=6, style = 'pretty', palette = 'Blues') +
tm_borders(alpha = 1)
mapnz_propn
mapnz_propn <- tm_shape(shapenz) +
tm_fill(col = 'propn_paid', n=6, style = 'pretty', palette = 'Blues') +
tm_borders(alpha = 1) +
tm_layout(legend.position = c("right", "bottom"))
mapnz_propn
mapnz_propn <- tm_shape(shapenz) +
tm_fill(col = 'propn_paid', n=6, style = 'pretty', palette = 'Blues') +
tm_borders(alpha = 1) +
tm_layout(main.title = "Paid employees as a proportion of total workers by NZ territorial area, 2018"
,legend.position = c("right", "bottom"))
mapnz_propn
mapnz_propn <- tm_shape(shapenz) +
tm_fill(col = 'propn_paid', n=6, style = 'pretty', palette = 'Blues') +
tm_borders(alpha = 1) +
tm_layout(main.title = "Paid employees as a proportion of total workers by NZ territorial area, 2018"
, main.title.position = "center"
, main.title.size = 1
,legend.position = c("right", "bottom"))
mapnz
# Re-plot using expanded tmap functions to control classification breaks
mapnz <- tm_shape(shapenz) +
tm_fill(col = 'Paid employee', n=8, style = 'jenks', palette = 'Greens') +
tm_borders(alpha = 1)
?tm_layout
plot(shapenz)
qtm(shapenz)
# Re-plot using expanded tmap functions to control classification breaks
mapnz <- tm_shape(shapenz) +
tm_fill(col = 'Paid employee', n=8, style = 'jenks', palette = 'Greens') +
tm_borders(alpha = 1)
mapnz
# Re-plot using expanded tmap functions to control classification breaks
mapnz <- tm_shape(shapenz) +
tm_fill(col = 'Paid employee', n=8, style = 'jenks', palette = 'Blues') +
tm_borders(alpha = 1)
mapnz
# Load in shapefile
shapenz <- st_read("N:/Documents/CASA0005/GIS/wk1/Homework/territorial-authority-2018-generalised.shp")
# Join census data to the NZ shapefile
# Census 'Area_Code' joins to shapefile 'TA2018_V1_'
shapenz <- shapenz %>% left_join(censusdata, by = c('TA2018_V1_' = 'Area_Code'))
# Re-plot using expanded tmap functions to control classification breaks
mapnz <- tm_shape(shapenz) +
tm_fill(col = 'Paid employee', n=8, style = 'jenks', palette = 'Greens') +
tm_borders(alpha = 1)
mapnz
mapnz_propn <- tm_shape(shapenz) +
tm_fill(col = 'propn_paid', n=6, style = 'pretty', palette = 'Blues') +
tm_borders(alpha = 1) +
tm_layout(title = "Paid employees as a proportion of total workers by NZ territorial area, 2018"
, title.position = "center"
, title.size = 0.5
,legend.position = c("right", "bottom"))
mapnz_propn
mapnz_propn <- tm_shape(shapenz) +
tm_fill(col = 'propn_paid', n=6, style = 'pretty', palette = 'Blues') +
tm_borders(alpha = 1) +
tm_layout(title = "Paid employees as a proportion of total workers by NZ territorial area, 2018"
, title.position = "center"
, title.size = 0.5)
mapnz_propn
mapnz_propn <- tm_shape(shapenz) +
tm_fill(col = 'propn_paid', n=6, style = 'pretty', palette = 'Blues') +
tm_borders(alpha = 1) +
tm_layout(title = "Paid employees as a proportion of total workers by NZ territorial area, 2018"
, title.size = 0.5
,legend.position = c("right", "bottom"))
mapnz_propn
View(shapenz)
View(shapenz)
# Create tidier map, using proportion column and removing Outside Territorial Area
shapenz_2 <- shapenz %>% filter(TA2018_V1_ != 999)
mapnz_propn <- tm_shape(shapenz_2) +
tm_fill(col = 'propn_paid', n=6, style = 'pretty', palette = 'Blues') +
tm_borders(alpha = 1) +
tm_layout(title = "Paid employees as a proportion of total workers by NZ territorial area, 2018"
, title.size = 0.5
,legend.position = c("right", "bottom"))
mapnz_propn
mapnz_propn <- tm_shape(shapenz_2) +
tm_fill(col = 'propn_paid', n=6, style = 'pretty', palette = 'Blues') +
tm_borders(alpha = 1) +
tm_layout(main.title = "Paid employees as a proportion of total workers by NZ territorial area, 2018"
, main.title.size = 0.5
, main.title.position = "centre"
, legend.position = c("right", "bottom"))
mapnz_propn
mapnz_propn <- tm_shape(shapenz_2) +
tm_fill(col = 'propn_paid', n=6, style = 'pretty', palette = 'Blues') +
tm_borders(alpha = 1) +
tm_layout(main.title = "Paid employees as a proportion of total workers by NZ territorial area, 2018"
, main.title.size = 0.8
, main.title.position = "centre"
, legend.position = c("right", "bottom")
, frame = FALSE)
mapnz_propn
mapnz_propn <- tm_shape(shapenz_2) +
tm_fill(col = 'propn_paid', n=6, style = 'pretty', palette = 'Blues') +
tm_borders(alpha = 1) +
tm_layout(main.title = "Paid employees as a proportion of total workers by NZ territorial area, 2018"
, main.title.size = 0.8
, main.title.position = "centre"
, legend.position = c("right", "bottom")
, frame = FALSE
, style  ="classic")
mapnz_propn <- tm_shape(shapenz_2) +
tm_fill(col = 'propn_paid', n=6, style = 'pretty', palette = 'Blues') +
tm_borders(alpha = 1) +
tm_layout(style  ="classic")
mapnz_propn <- tm_shape(shapenz_2) +
tm_fill(col = 'propn_paid', n=6, style = 'pretty', palette = 'Blues') +
tm_borders(alpha = 1) +
tm_layout(main.title = "Paid employees as a proportion of total workers \nby NZ territorial area, 2018"
, main.title.size = 0.9
, main.title.position = "centre"
, legend.position = c("right", "bottom")
, frame = FALSE)
mapnz_propn
# Load in shapefile
shapenz <- st_read("N:/Documents/CASA0005/GIS/wk1/Homework/territorial-authority-2018-generalised.shp")
# Calculate new variable: proportion of paid employees by total working population
censusdata <- censusdata %>% mutate(`Propn paid` = `Paid employee`/Total)
# Join census data to the NZ shapefile
# Census 'Area_Code' joins to shapefile 'TA2018_V1_'
shapenz <- shapenz %>% left_join(censusdata, by = c('TA2018_V1_' = 'Area_Code'))
# Create tidier map, using proportion column and removing Outside Territorial Area
shapenz_2 <- shapenz %>% filter(TA2018_V1_ != 999)
mapnz_propn <- tm_shape(shapenz_2) +
tm_fill(col = 'Propn paid', n=6, style = 'pretty', palette = 'Blues') +
tm_borders(alpha = 1) +
tm_layout(main.title = "Paid employees as a proportion of total workers \nby NZ territorial area, 2018"
, main.title.size = 0.9
, main.title.position = "centre"
, legend.position = c("right", "bottom")
, frame = FALSE)
mapnz_propn
mapnz <- tm_shape(shapenz) +
tm_fill(col = 'Paid employee', n=8, style = 'jenks', palette = 'Greens') +
tm_borders(alpha = 1)
mapnz
# Re-plot using expanded tmap functions to control classification breaks
mapnz <- tm_shape(shapenz) +
tm_fill(col = 'Paid employee', n=8, style = 'jenks', palette = 'Greens') +
tm_borders(alpha = 1) +
tm_legend(position = c("right", "bottom"))
mapnz
library(usethis)
edit_git_config()
edit_git_config()
library(tidyverse)
library(janitor)
library(sf)
getwd()
setwd("C:/Users/joepo/Documents/Uni/UCL CASA/CASA0007/CASA0007_MajorAssessment")
getwd()
library(here)
pedcatch <- st_read(here("data", "20221226_51BennettSt_pedcatch.geojson"))
library(tmap)
names(pedcatch)
View(pedcatch)
qtm(pedcatch)
pedcatch$wait
View(pedcatch)
bedford <- st_read(here("data", "20221226_26BedfordWay_pedcatch.geojson"))
qtm(bedford)
View(pedcatch)
